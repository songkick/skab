#!/usr/bin/env ruby

unless $LOAD_PATH.include?(File.dirname(__FILE__) + '/../lib')
  $LOAD_PATH.unshift(File.dirname(__FILE__) + '/../lib')
end

usage = <<-USAGE
Usage: statisfish [output] [model] [extra_params]
\tTry `statisfish help [model]` for more info about a specific model and its
\tparameters
USAGE

require 'statisfish/models'
require 'statisfish/output'

if ARGV.empty?
  puts usage
  exit
end

if ARGV[0] == 'help'
  if ARGV[1] == 'model'
    if ARGV[2]
      model = Statisfish::Models.from_name(ARGV[2])
      if model
        puts model.help
      else
        puts <<-UNKNOWN_MODEL
This model doesn't exist. List of known models:
#{Statisfish::Models.model_names.join(', ')}
        UNKNOWN_MODEL
      end
    end
  else
    puts usage
  end
  exit
end

model_args = ARGV.slice(2, ARGV.length)
model_class = Statisfish::Models.from_name(ARGV[1])
unless model_class
  puts <<-UNKNOWN_MODEL
This model doesn't exist. List of known models:
#{Statisfish::Models.model_names.join(', ')}
  UNKNOWN_MODEL
  exit
end

output_class = Statisfish::Output.from_name(ARGV[0])
unless output_class
  puts <<-UNKNOWN_OUTPUT
This output doesn't exist. List of known outputs:
#{Statisfish::Output.output_names.join(', ')}
  UNKNOWN_OUTPUT
  exit
end

model = model_class.new(model_args)
output = output_class.new(STDOUT)
output.output(model)
